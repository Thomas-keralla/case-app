name: CI-master
on:
  push:
    branches: [ master ]
jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: 'adopt'
          cache: gradle
      - name: Grant Permissions to gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew build --scan --no-daemon
      - name: Test
        run: ./gradlew test --tests "*"
      - name: Test Success
        if: success()
        uses: actions/github-script@0.2.0
        with:
          github-token: ${{ github.token }}
          script: |
            return "*** Hurray basic test passed ***"
      - name: Test Fail
        if: failure()
        uses: actions/github-script@0.2.0
        with:
          github-token: ${{ github.token }}
          script: | 
            return "*** Dooo! basic test failed ***"  
  push_to_registries:
    name: Publish Artifact
    needs: build-test
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: devops-case-docker-ecr
          IMAGE_NAME: case-app
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY/$IMAGE_NAME:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY/$IMAGE_NAME:$IMAGE_TAG
  #push_to_registries:
  #  name: Publish Artifact
  #  needs: build-test
  #  runs-on: ubuntu-latest
  #  steps:
  #  - name: Checkout
  #    uses: actions/checkout@v3
  #  
  #  - name: Log in to Docker Hub
  #    uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
  #    with:
  #      username: ${{ secrets.DOCKER_HUB_USER }}
  #      password: ${{ secrets.DOCKER_HUB_PASS }}
  #  
  #  - name: Extract metadata (tags, labels) for Docker
  #    id: meta
  #    uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
  #    with:
  #      images: thomaskeralla/case-app
  #  - name: Build and push Docker image
  #    uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
  #    with:
  #      context: .
  #      push: true
  #      tags: ${{ steps.meta.outputs.tags }}
  #      labels: ${{ steps.meta.outputs.labels }}

